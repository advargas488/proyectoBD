//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoBD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PBDEntities : DbContext
    {
        public PBDEntities()
            : base("name=PBDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrador> Administradors { get; set; }
        public virtual DbSet<Cita> Citas { get; set; }
        public virtual DbSet<Clínica> Clínica { get; set; }
        public virtual DbSet<Clínica_Médico> Clínica_Médico { get; set; }
        public virtual DbSet<Clínica_Paciente> Clínica_Paciente { get; set; }
        public virtual DbSet<Médico> Médico { get; set; }
        public virtual DbSet<Paciente> Pacientes { get; set; }
        public virtual DbSet<Paciente_Medico> Paciente_Medico { get; set; }
    
        public virtual int Borrar_Admin(string nombre_Usuario)
        {
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Borrar_Admin", nombre_UsuarioParameter);
        }
    
        public virtual int Borrar_Clínica(string iD_Clínica)
        {
            var iD_ClínicaParameter = iD_Clínica != null ?
                new ObjectParameter("ID_Clínica", iD_Clínica) :
                new ObjectParameter("ID_Clínica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Borrar_Clínica", iD_ClínicaParameter);
        }
    
        public virtual int Borrar_Médico(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Borrar_Médico", iDParameter);
        }
    
        public virtual int Borrar_Paciente(Nullable<int> cédula)
        {
            var cédulaParameter = cédula.HasValue ?
                new ObjectParameter("Cédula", cédula) :
                new ObjectParameter("Cédula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Borrar_Paciente", cédulaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cantidad_Pacientes(Nullable<System.DateTime> fecha, string parametro)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var parametroParameter = parametro != null ?
                new ObjectParameter("Parametro", parametro) :
                new ObjectParameter("Parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cantidad_Pacientes", fechaParameter, parametroParameter);
        }
    
        public virtual ObjectResult<Casos_por_lugar_Result> Casos_por_lugar(string provincia, string canton, string distrito)
        {
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var cantonParameter = canton != null ?
                new ObjectParameter("Canton", canton) :
                new ObjectParameter("Canton", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Casos_por_lugar_Result>("Casos_por_lugar", provinciaParameter, cantonParameter, distritoParameter);
        }
    
        public virtual ObjectResult<ClinicasPorCanton_Result> ClinicasPorCanton()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClinicasPorCanton_Result>("ClinicasPorCanton");
        }
    
        public virtual int Editar_Admin(string nombre_Usuario, string nombre_Usuario_Nuevo, string contraseña)
        {
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            var nombre_Usuario_NuevoParameter = nombre_Usuario_Nuevo != null ?
                new ObjectParameter("Nombre_Usuario_Nuevo", nombre_Usuario_Nuevo) :
                new ObjectParameter("Nombre_Usuario_Nuevo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Editar_Admin", nombre_UsuarioParameter, nombre_Usuario_NuevoParameter, contraseñaParameter);
        }
    
        public virtual int Editar_Clínica(string iD, string iD_Nueva, string nombre, string dirección, Nullable<int> teléfono, string correo, string sitio_Web, string horario, string provincia, string cantón, string distrito)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var iD_NuevaParameter = iD_Nueva != null ?
                new ObjectParameter("ID_Nueva", iD_Nueva) :
                new ObjectParameter("ID_Nueva", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direcciónParameter = dirección != null ?
                new ObjectParameter("Dirección", dirección) :
                new ObjectParameter("Dirección", typeof(string));
    
            var teléfonoParameter = teléfono.HasValue ?
                new ObjectParameter("Teléfono", teléfono) :
                new ObjectParameter("Teléfono", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var sitio_WebParameter = sitio_Web != null ?
                new ObjectParameter("Sitio_Web", sitio_Web) :
                new ObjectParameter("Sitio_Web", typeof(string));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var cantónParameter = cantón != null ?
                new ObjectParameter("Cantón", cantón) :
                new ObjectParameter("Cantón", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Editar_Clínica", iDParameter, iD_NuevaParameter, nombreParameter, direcciónParameter, teléfonoParameter, correoParameter, sitio_WebParameter, horarioParameter, provinciaParameter, cantónParameter, distritoParameter);
        }
    
        public virtual int Editar_Médico(string iD, string iD_Nuevo, Nullable<int> cédula, string nombre, string apellido1, string apellido2, string especialidad, string estado)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var iD_NuevoParameter = iD_Nuevo != null ?
                new ObjectParameter("ID_Nuevo", iD_Nuevo) :
                new ObjectParameter("ID_Nuevo", typeof(string));
    
            var cédulaParameter = cédula.HasValue ?
                new ObjectParameter("Cédula", cédula) :
                new ObjectParameter("Cédula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Editar_Médico", iDParameter, iD_NuevoParameter, cédulaParameter, nombreParameter, apellido1Parameter, apellido2Parameter, especialidadParameter, estadoParameter);
        }
    
        public virtual int Editar_Paciente(Nullable<int> cédula, Nullable<int> cédula_Nueva, string nombre, string apellido1, string apellido2, Nullable<int> teléfono, string provincia, string cantón, string distrito, string correo, Nullable<System.DateTime> fecha_Nac, string tipo_Sangre, string estado)
        {
            var cédulaParameter = cédula.HasValue ?
                new ObjectParameter("Cédula", cédula) :
                new ObjectParameter("Cédula", typeof(int));
    
            var cédula_NuevaParameter = cédula_Nueva.HasValue ?
                new ObjectParameter("Cédula_Nueva", cédula_Nueva) :
                new ObjectParameter("Cédula_Nueva", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var teléfonoParameter = teléfono.HasValue ?
                new ObjectParameter("Teléfono", teléfono) :
                new ObjectParameter("Teléfono", typeof(int));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var cantónParameter = cantón != null ?
                new ObjectParameter("Cantón", cantón) :
                new ObjectParameter("Cantón", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var fecha_NacParameter = fecha_Nac.HasValue ?
                new ObjectParameter("Fecha_Nac", fecha_Nac) :
                new ObjectParameter("Fecha_Nac", typeof(System.DateTime));
    
            var tipo_SangreParameter = tipo_Sangre != null ?
                new ObjectParameter("Tipo_Sangre", tipo_Sangre) :
                new ObjectParameter("Tipo_Sangre", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Editar_Paciente", cédulaParameter, cédula_NuevaParameter, nombreParameter, apellido1Parameter, apellido2Parameter, teléfonoParameter, provinciaParameter, cantónParameter, distritoParameter, correoParameter, fecha_NacParameter, tipo_SangreParameter, estadoParameter);
        }
    
        public virtual int Insertar_Admin(string nombre_Usuario, string contraseña)
        {
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Admin", nombre_UsuarioParameter, contraseñaParameter);
        }
    
        public virtual int Insertar_Cita(string iD_Médico, Nullable<int> cédula_Paciente, Nullable<System.DateTime> hora_Cita, string tipo_Servicio, string diagnóstico, string tratamiento)
        {
            var iD_MédicoParameter = iD_Médico != null ?
                new ObjectParameter("ID_Médico", iD_Médico) :
                new ObjectParameter("ID_Médico", typeof(string));
    
            var cédula_PacienteParameter = cédula_Paciente.HasValue ?
                new ObjectParameter("Cédula_Paciente", cédula_Paciente) :
                new ObjectParameter("Cédula_Paciente", typeof(int));
    
            var hora_CitaParameter = hora_Cita.HasValue ?
                new ObjectParameter("Hora_Cita", hora_Cita) :
                new ObjectParameter("Hora_Cita", typeof(System.DateTime));
    
            var tipo_ServicioParameter = tipo_Servicio != null ?
                new ObjectParameter("Tipo_Servicio", tipo_Servicio) :
                new ObjectParameter("Tipo_Servicio", typeof(string));
    
            var diagnósticoParameter = diagnóstico != null ?
                new ObjectParameter("Diagnóstico", diagnóstico) :
                new ObjectParameter("Diagnóstico", typeof(string));
    
            var tratamientoParameter = tratamiento != null ?
                new ObjectParameter("Tratamiento", tratamiento) :
                new ObjectParameter("Tratamiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Cita", iD_MédicoParameter, cédula_PacienteParameter, hora_CitaParameter, tipo_ServicioParameter, diagnósticoParameter, tratamientoParameter);
        }
    
        public virtual int Insertar_Clínica(string iD, string nombre, string dirección, Nullable<int> teléfono, string correo, string sitio_Web, string horario, string provincia, string cantón, string distrito)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direcciónParameter = dirección != null ?
                new ObjectParameter("Dirección", dirección) :
                new ObjectParameter("Dirección", typeof(string));
    
            var teléfonoParameter = teléfono.HasValue ?
                new ObjectParameter("Teléfono", teléfono) :
                new ObjectParameter("Teléfono", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var sitio_WebParameter = sitio_Web != null ?
                new ObjectParameter("Sitio_Web", sitio_Web) :
                new ObjectParameter("Sitio_Web", typeof(string));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var cantónParameter = cantón != null ?
                new ObjectParameter("Cantón", cantón) :
                new ObjectParameter("Cantón", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Clínica", iDParameter, nombreParameter, direcciónParameter, teléfonoParameter, correoParameter, sitio_WebParameter, horarioParameter, provinciaParameter, cantónParameter, distritoParameter);
        }
    
        public virtual int Insertar_Clínica_Médico(string iD_Clínica, string iD_Médico)
        {
            var iD_ClínicaParameter = iD_Clínica != null ?
                new ObjectParameter("ID_Clínica", iD_Clínica) :
                new ObjectParameter("ID_Clínica", typeof(string));
    
            var iD_MédicoParameter = iD_Médico != null ?
                new ObjectParameter("ID_Médico", iD_Médico) :
                new ObjectParameter("ID_Médico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Clínica_Médico", iD_ClínicaParameter, iD_MédicoParameter);
        }
    
        public virtual int Insertar_Clínica_Paciente(string iD_Clínica, Nullable<int> cédula_Paciente)
        {
            var iD_ClínicaParameter = iD_Clínica != null ?
                new ObjectParameter("ID_Clínica", iD_Clínica) :
                new ObjectParameter("ID_Clínica", typeof(string));
    
            var cédula_PacienteParameter = cédula_Paciente.HasValue ?
                new ObjectParameter("Cédula_Paciente", cédula_Paciente) :
                new ObjectParameter("Cédula_Paciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Clínica_Paciente", iD_ClínicaParameter, cédula_PacienteParameter);
        }
    
        public virtual int Insertar_Médico(string iD, Nullable<int> cédula, string nombre, string apellido1, string apellido2, string especialidad, string estado)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var cédulaParameter = cédula.HasValue ?
                new ObjectParameter("Cédula", cédula) :
                new ObjectParameter("Cédula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Médico", iDParameter, cédulaParameter, nombreParameter, apellido1Parameter, apellido2Parameter, especialidadParameter, estadoParameter);
        }
    
        public virtual int Insertar_Paciente(Nullable<int> cédula, string nombre, string apellido1, string apellido2, Nullable<int> teléfono, string provincia, string cantón, string distrito, string correo, Nullable<System.DateTime> fecha_Nac, string tipo_Sangre, string estado)
        {
            var cédulaParameter = cédula.HasValue ?
                new ObjectParameter("Cédula", cédula) :
                new ObjectParameter("Cédula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var teléfonoParameter = teléfono.HasValue ?
                new ObjectParameter("Teléfono", teléfono) :
                new ObjectParameter("Teléfono", typeof(int));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var cantónParameter = cantón != null ?
                new ObjectParameter("Cantón", cantón) :
                new ObjectParameter("Cantón", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var fecha_NacParameter = fecha_Nac.HasValue ?
                new ObjectParameter("Fecha_Nac", fecha_Nac) :
                new ObjectParameter("Fecha_Nac", typeof(System.DateTime));
    
            var tipo_SangreParameter = tipo_Sangre != null ?
                new ObjectParameter("Tipo_Sangre", tipo_Sangre) :
                new ObjectParameter("Tipo_Sangre", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Paciente", cédulaParameter, nombreParameter, apellido1Parameter, apellido2Parameter, teléfonoParameter, provinciaParameter, cantónParameter, distritoParameter, correoParameter, fecha_NacParameter, tipo_SangreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Medico_Filtro_Result> Medico_Filtro(string especialidad, string estado)
        {
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Medico_Filtro_Result>("Medico_Filtro", especialidadParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Medico_Filtro2(string especialidad, string estado)
        {
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Medico_Filtro2", especialidadParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SanosCanton_Result> SanosCanton()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SanosCanton_Result>("SanosCanton");
        }
    
        public virtual ObjectResult<Select_General_Clínica_Result> Select_General_Clínica()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_General_Clínica_Result>("Select_General_Clínica");
        }
    
        public virtual ObjectResult<Select_General_Clínica_2_Result> Select_General_Clínica_2(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_General_Clínica_2_Result>("Select_General_Clínica_2", nombreParameter);
        }
    
        public virtual ObjectResult<Select_General_Médico_Result> Select_General_Médico()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_General_Médico_Result>("Select_General_Médico");
        }
    
        public virtual ObjectResult<Select_General_Médico_2_Result> Select_General_Médico_2(string nombre, string apellido1, string apellido2)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_General_Médico_2_Result>("Select_General_Médico_2", nombreParameter, apellido1Parameter, apellido2Parameter);
        }
    
        public virtual ObjectResult<Select_General_Paciente_Result> Select_General_Paciente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_General_Paciente_Result>("Select_General_Paciente");
        }
    
        public virtual ObjectResult<Select_General_Paciente_2_Result> Select_General_Paciente_2(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_General_Paciente_2_Result>("Select_General_Paciente_2", nombreParameter);
        }
    
        public virtual ObjectResult<Select_Individual_Clínica_Result> Select_Individual_Clínica(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Individual_Clínica_Result>("Select_Individual_Clínica", iDParameter);
        }
    
        public virtual ObjectResult<Select_Individual_Médico_Result> Select_Individual_Médico(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Individual_Médico_Result>("Select_Individual_Médico", iDParameter);
        }
    
        public virtual ObjectResult<Select_Individual_Paciente_Result> Select_Individual_Paciente(Nullable<int> cédula)
        {
            var cédulaParameter = cédula.HasValue ?
                new ObjectParameter("Cédula", cédula) :
                new ObjectParameter("Cédula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Individual_Paciente_Result>("Select_Individual_Paciente", cédulaParameter);
        }
    
        public virtual ObjectResult<Select_Medico_Paciente_Result> Select_Medico_Paciente(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Medico_Paciente_Result>("Select_Medico_Paciente", nombreParameter);
        }
    
        public virtual ObjectResult<Top5Docs_Result> Top5Docs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Top5Docs_Result>("Top5Docs");
        }
    
        public virtual ObjectResult<TopApellidos_Result> TopApellidos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TopApellidos_Result>("TopApellidos");
        }
    
        public virtual ObjectResult<TopApellidosCanton_Result> TopApellidosCanton(string canton)
        {
            var cantonParameter = canton != null ?
                new ObjectParameter("Canton", canton) :
                new ObjectParameter("Canton", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TopApellidosCanton_Result>("TopApellidosCanton", cantonParameter);
        }
    
        public virtual ObjectResult<TopEspecialidad_Result> TopEspecialidad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TopEspecialidad_Result>("TopEspecialidad");
        }
    
        public virtual ObjectResult<TopProvincias_Result> TopProvincias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TopProvincias_Result>("TopProvincias");
        }
    }
}
